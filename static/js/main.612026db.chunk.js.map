{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Notification","message","notification","FeedbackOptions","options","onLeaveFeedback","btnGroupe","map","option","index","label","toUpperCase","slice","type","name","button","onClick","Statistics","good","neutral","bad","total","percentage","list","item","App","useState","setGood","setNeutral","setBad","countTotalFeedbacks","event","target","textContent","toLowerCase","prevState","totalFeedbacks","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,iBCA1ED,EAAOC,QAAU,CAAC,aAAe,qC,qICgBlBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCIQI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGJ,UAAWC,IAAEI,aAAhB,SAA+BD,K,gBC2BzBE,EA3BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIR,UAAWC,IAAEQ,UAAjB,SACGF,EAAQG,KAAI,SAACC,EAAQC,GACpB,IAAMC,EAAQF,EAAO,GAAGG,cAAgBH,EAAOI,MAAM,GACrD,OACE,6BACE,wBACEC,KAAK,SACLC,KAAMJ,EACNb,UAAWC,IAAEiB,OACbC,QAASX,EAJX,SAMGK,KAPID,S,gBCkBJQ,EAxBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,mCACE,qBAAIzB,UAAWC,IAAEyB,KAAjB,UACE,qBAAI1B,UAAWC,IAAE0B,KAAjB,mBAA8BN,KAC9B,qBAAIrB,UAAWC,IAAE0B,KAAjB,sBAAiCL,KACjC,qBAAItB,UAAWC,IAAE0B,KAAjB,kBAA6BJ,KAC7B,qBAAIvB,UAAWC,IAAE0B,KAAjB,oBAA+BH,KAC/B,qBAAIxB,UAAWC,IAAE0B,KAAjB,gCACsBN,EAAOI,EAAU,IAAS,WCPzC,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAyBMC,EAAsB,WAE1B,OADcZ,EAAOC,EAAUC,GAUjC,OACE,qCACE,cAAC,EAAD,CAASzB,MAAM,wBAAf,SACE,cAAC,EAAD,CACES,QAtCQ,CAAC,OAAQ,UAAW,OAuC5BC,gBArCkB,SAAA0B,GAGxB,OAFaA,EAAMC,OAAOC,YAAYC,eAGpC,IAAK,OACHP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAwBF,cAAC,EAAD,CAASxC,MAAM,aAAf,SACGmC,IAAwB,EACvB,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,WAtB8B,WACtC,IAAMc,EAAiBN,IAEvB,OADmBO,KAAKC,MAAOpB,EAAOkB,EAAkB,KAoBpCG,KAGd,cAAC,EAAD,CAActC,QAAQ,2BC3DhCuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.612026db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__eaRbf\",\"item\":\"Statistics_item__1Slzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__8j9sD\",\"title\":\"Section_title__3HYrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGroupe\":\"FeedbackOptions_btnGroupe__2iOrU\",\"button\":\"FeedbackOptions_button__Ce0C1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2ClCw\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={s.btnGroupe}>\n      {options.map((option, index) => {\n        const label = option[0].toUpperCase() + option.slice(1);\n        return (\n          <li key={index}>\n            <button\n              type=\"button\"\n              name={label}\n              className={s.button}\n              onClick={onLeaveFeedback}\n            >\n              {label}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        <li className={s.item}>Good: {good}</li>\n        <li className={s.item}>Neutral: {neutral}</li>\n        <li className={s.item}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.item}>\n          Positive feedback: {good ? percentage + `%` : 0}\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const feedbackIncrement = event => {\n    const name = event.target.textContent.toLowerCase();\n\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedbacks = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const totalFeedbacks = countTotalFeedbacks();\n    const percentage = Math.round((good / totalFeedbacks) * 100);\n    return percentage;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={feedbackIncrement}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedbacks() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedbacks()}\n            percentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}